package org.htng.chargers.athidhi;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.Configuration;
import io.swagger.client.api.ReservationsApi;
import io.swagger.client.auth.ApiKeyAuth;
import io.swagger.client.model.Reservation;

@Path("guestFeed")
public class GuestComments {

    @GET
    @Produces(MediaType.TEXT_PLAIN)
    public String guestIt(@QueryParam("profID") String profID) {
    	
		ApiClient defaultClient = Configuration.getDefaultApiClient();
		Reservation result = null;
		String comment = null;
	      // Configure API key authorization: Bearer
	      ApiKeyAuth Bearer = (ApiKeyAuth) defaultClient.getAuthentication("Bearer");
	      // Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)
	      //Bearer.setApiKeyPrefix("Token");
	      Bearer.setApiKey("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzaGFzdGEiLCJyZXBvc2l0b3J5QWNjZXNzSWQiOiJzaGFzdGEiLCJleHAiOjE1NDg3MTkwMDl9.mXXWDwge3Lfb3Gm8AmXRSAZoFJ0sOcXWjxR6V9gyv5B34lCwCDfZeeJals_EvWw258MWgvWi_SgclylfynBGIw");

	      ReservationsApi apiInstance = new ReservationsApi();
	      String propertyCode = "SHASTA"; // String | Property code as designated in the PMS
	      try {
	    	  System.out.println(profID);
	    	  if(!"14740".equals(profID)) {
	    		  return "**Profile ID not found**";
	    	  }
	    	  //Reservation id generated by the PMS
	           //result = apiInstance.getReservation(propertyCode, suite);
	    	  result = apiInstance.getReservation(propertyCode, profID);
	    	  comment = result.getComments().get(0).getComment();
	    	  System.out.println(comment);
	          //return result.getBookingConfirmationId();
	      } catch (ApiException e) {
	          System.err.println("Exception when calling ReservationsApi#getReservation");
	          e.printStackTrace();
	      }
    	
    	return (comment != null) ? comment : "No comments available";
    }
}
