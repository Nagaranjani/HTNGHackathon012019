package org.htng.chargers.athidhi;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.Configuration;
import io.swagger.client.api.ReservationsApi;
import io.swagger.client.auth.ApiKeyAuth;
import io.swagger.client.model.Name;
import io.swagger.client.model.Reservation;

/**
 * Root resource (exposed at "myresource" path)
 */
@Path("myresource")
public class MyResource {

    /**
     * Method handling HTTP GET requests. The returned object will be sent
     * to the client as "text/plain" media type.
     *
     * @return String that will be returned as a text/plain response.
     */
    @GET
    @Produces(MediaType.TEXT_PLAIN)
    public String getIt(@QueryParam("suite") String suite) {

		
		ApiClient defaultClient = Configuration.getDefaultApiClient();
		Reservation result = null;
	      // Configure API key authorization: Bearer
	      ApiKeyAuth Bearer = (ApiKeyAuth) defaultClient.getAuthentication("Bearer");
	      // Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)
	      //Bearer.setApiKeyPrefix("Token");
	      Bearer.setApiKey("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzaGFzdGEiLCJyZXBvc2l0b3J5QWNjZXNzSWQiOiJzaGFzdGEiLCJleHAiOjE1NDg3MTkwMDl9.mXXWDwge3Lfb3Gm8AmXRSAZoFJ0sOcXWjxR6V9gyv5B34lCwCDfZeeJals_EvWw258MWgvWi_SgclylfynBGIw");

	      ReservationsApi apiInstance = new ReservationsApi();
	      String propertyCode = "SHASTA"; // String | Property code as designated in the PMS
	      try {
	    	  System.out.println(suite);
	    	  if(!"4143".equals(suite)) {
	    		  return "**Room number not found**";
	    	  }
	    	  //Reservation id generated by the PMS
	           //result = apiInstance.getReservation(propertyCode, suite);
	    	  String resId = "14740";
	    	  result = apiInstance.getReservation(propertyCode, resId);
	    	  System.out.println(resId);
	          //return result.getBookingConfirmationId();
	      } catch (ApiException e) {
	          System.err.println("Exception when calling ReservationsApi#getReservation");
	          e.printStackTrace();
	      }
	      
	      Name nom =  null;
	      
	      if(result != null) {
	    	  //if(result.getRoomStays().get(0).getRoomNumber() != "")
	    	  nom = result.getGuests().get(0).getProfile().getName();
	    	  if(nom != null)
	    	  return nom.getFirst() + " " + nom.getLast();
	    	  else
	    		  return "--Room number not found--";
	    	  
	      } else {
	    	  return  "check room number";
	      }
	      
    }
}
