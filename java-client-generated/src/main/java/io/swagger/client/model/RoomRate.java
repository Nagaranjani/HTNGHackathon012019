/*
 * HAPI Repository API
 * API for retrieving objects from HAPI repository
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.TimeSpan;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * RoomRate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-26T23:47:35.032Z")
public class RoomRate {
  @SerializedName("effectiveDates")
  private TimeSpan effectiveDates = null;

  @SerializedName("rateCode")
  private String rateCode = null;

  @SerializedName("currencyCode")
  private String currencyCode = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  public RoomRate effectiveDates(TimeSpan effectiveDates) {
    this.effectiveDates = effectiveDates;
    return this;
  }

   /**
   * Get effectiveDates
   * @return effectiveDates
  **/
  @ApiModelProperty(value = "")
  public TimeSpan getEffectiveDates() {
    return effectiveDates;
  }

  public void setEffectiveDates(TimeSpan effectiveDates) {
    this.effectiveDates = effectiveDates;
  }

  public RoomRate rateCode(String rateCode) {
    this.rateCode = rateCode;
    return this;
  }

   /**
   * code identifying the rate
   * @return rateCode
  **/
  @ApiModelProperty(example = "AAA", value = "code identifying the rate")
  public String getRateCode() {
    return rateCode;
  }

  public void setRateCode(String rateCode) {
    this.rateCode = rateCode;
  }

  public RoomRate currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * currency code of revenue amount indicated
   * @return currencyCode
  **/
  @ApiModelProperty(example = "USD", value = "currency code of revenue amount indicated")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public RoomRate amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * rate amount
   * @return amount
  **/
  @ApiModelProperty(example = "105.55", value = "rate amount")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoomRate roomRate = (RoomRate) o;
    return Objects.equals(this.effectiveDates, roomRate.effectiveDates) &&
        Objects.equals(this.rateCode, roomRate.rateCode) &&
        Objects.equals(this.currencyCode, roomRate.currencyCode) &&
        Objects.equals(this.amount, roomRate.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveDates, rateCode, currencyCode, amount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoomRate {\n");
    
    sb.append("    effectiveDates: ").append(toIndentedString(effectiveDates)).append("\n");
    sb.append("    rateCode: ").append(toIndentedString(rateCode)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

