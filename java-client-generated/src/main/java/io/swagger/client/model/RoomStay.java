/*
 * HAPI Repository API
 * API for retrieving objects from HAPI repository
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Revenue;
import io.swagger.client.model.RoomRate;
import io.swagger.client.model.Service;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RoomStay
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-26T23:47:35.032Z")
public class RoomStay {
  @SerializedName("roomNumber")
  private String roomNumber = null;

  /**
   * current status of reservation
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    REQUESTED("REQUESTED"),
    
    RESERVED("RESERVED"),
    
    IN_HOUSE("IN_HOUSE"),
    
    CANCELLED("CANCELLED"),
    
    CHECKED_OUT("CHECKED_OUT"),
    
    NO_SHOW("NO_SHOW"),
    
    WAIT_LIST("WAIT_LIST"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("guestId")
  private String guestId = null;

  @SerializedName("roomType")
  private String roomType = null;

  @SerializedName("rateCode")
  private String rateCode = null;

  @SerializedName("marketCode")
  private String marketCode = null;

  @SerializedName("channelCode")
  private String channelCode = null;

  @SerializedName("sourceCode")
  private String sourceCode = null;

  @SerializedName("blockCode")
  private String blockCode = null;

  @SerializedName("roomCount")
  private Integer roomCount = null;

  @SerializedName("paymentMethod")
  private String paymentMethod = null;

  @SerializedName("compYN")
  private String compYN = null;

  @SerializedName("rates")
  private List<RoomRate> rates = null;

  @SerializedName("revenue")
  private List<Revenue> revenue = null;

  @SerializedName("services")
  private List<Service> services = null;

  public RoomStay roomNumber(String roomNumber) {
    this.roomNumber = roomNumber;
    return this;
  }

   /**
   * room number for stay
   * @return roomNumber
  **/
  @ApiModelProperty(example = "122", value = "room number for stay")
  public String getRoomNumber() {
    return roomNumber;
  }

  public void setRoomNumber(String roomNumber) {
    this.roomNumber = roomNumber;
  }

  public RoomStay status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * current status of reservation
   * @return status
  **/
  @ApiModelProperty(example = "RESERVED", value = "current status of reservation")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public RoomStay guestId(String guestId) {
    this.guestId = guestId;
    return this;
  }

   /**
   * id of guest associated to stay
   * @return guestId
  **/
  @ApiModelProperty(example = "5658451", value = "id of guest associated to stay")
  public String getGuestId() {
    return guestId;
  }

  public void setGuestId(String guestId) {
    this.guestId = guestId;
  }

  public RoomStay roomType(String roomType) {
    this.roomType = roomType;
    return this;
  }

   /**
   * code identifying the type of room associated to stay
   * @return roomType
  **/
  @ApiModelProperty(example = "KING", value = "code identifying the type of room associated to stay")
  public String getRoomType() {
    return roomType;
  }

  public void setRoomType(String roomType) {
    this.roomType = roomType;
  }

  public RoomStay rateCode(String rateCode) {
    this.rateCode = rateCode;
    return this;
  }

   /**
   * code identifying rate for stay
   * @return rateCode
  **/
  @ApiModelProperty(example = "AAA", value = "code identifying rate for stay")
  public String getRateCode() {
    return rateCode;
  }

  public void setRateCode(String rateCode) {
    this.rateCode = rateCode;
  }

  public RoomStay marketCode(String marketCode) {
    this.marketCode = marketCode;
    return this;
  }

   /**
   * code identifying marketing type for rate
   * @return marketCode
  **/
  @ApiModelProperty(example = "F", value = "code identifying marketing type for rate")
  public String getMarketCode() {
    return marketCode;
  }

  public void setMarketCode(String marketCode) {
    this.marketCode = marketCode;
  }

  public RoomStay channelCode(String channelCode) {
    this.channelCode = channelCode;
    return this;
  }

   /**
   * code identifying source of reservation
   * @return channelCode
  **/
  @ApiModelProperty(example = "DM", value = "code identifying source of reservation")
  public String getChannelCode() {
    return channelCode;
  }

  public void setChannelCode(String channelCode) {
    this.channelCode = channelCode;
  }

  public RoomStay sourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
    return this;
  }

   /**
   * code identifying source of rate associated to stay
   * @return sourceCode
  **/
  @ApiModelProperty(example = "SRC", value = "code identifying source of rate associated to stay")
  public String getSourceCode() {
    return sourceCode;
  }

  public void setSourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
  }

  public RoomStay blockCode(String blockCode) {
    this.blockCode = blockCode;
    return this;
  }

   /**
   * group block code
   * @return blockCode
  **/
  @ApiModelProperty(example = "GROUPBLOCK", value = "group block code")
  public String getBlockCode() {
    return blockCode;
  }

  public void setBlockCode(String blockCode) {
    this.blockCode = blockCode;
  }

  public RoomStay roomCount(Integer roomCount) {
    this.roomCount = roomCount;
    return this;
  }

   /**
   * number of rooms associated to stay
   * @return roomCount
  **/
  @ApiModelProperty(example = "1", value = "number of rooms associated to stay")
  public Integer getRoomCount() {
    return roomCount;
  }

  public void setRoomCount(Integer roomCount) {
    this.roomCount = roomCount;
  }

  public RoomStay paymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * payment method used in the reservation
   * @return paymentMethod
  **/
  @ApiModelProperty(example = "CA", value = "payment method used in the reservation")
  public String getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public RoomStay compYN(String compYN) {
    this.compYN = compYN;
    return this;
  }

   /**
   * is reservation complimentary
   * @return compYN
  **/
  @ApiModelProperty(example = "false", value = "is reservation complimentary")
  public String getCompYN() {
    return compYN;
  }

  public void setCompYN(String compYN) {
    this.compYN = compYN;
  }

  public RoomStay rates(List<RoomRate> rates) {
    this.rates = rates;
    return this;
  }

  public RoomStay addRatesItem(RoomRate ratesItem) {
    if (this.rates == null) {
      this.rates = new ArrayList<RoomRate>();
    }
    this.rates.add(ratesItem);
    return this;
  }

   /**
   * Get rates
   * @return rates
  **/
  @ApiModelProperty(value = "")
  public List<RoomRate> getRates() {
    return rates;
  }

  public void setRates(List<RoomRate> rates) {
    this.rates = rates;
  }

  public RoomStay revenue(List<Revenue> revenue) {
    this.revenue = revenue;
    return this;
  }

  public RoomStay addRevenueItem(Revenue revenueItem) {
    if (this.revenue == null) {
      this.revenue = new ArrayList<Revenue>();
    }
    this.revenue.add(revenueItem);
    return this;
  }

   /**
   * Get revenue
   * @return revenue
  **/
  @ApiModelProperty(value = "")
  public List<Revenue> getRevenue() {
    return revenue;
  }

  public void setRevenue(List<Revenue> revenue) {
    this.revenue = revenue;
  }

  public RoomStay services(List<Service> services) {
    this.services = services;
    return this;
  }

  public RoomStay addServicesItem(Service servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<Service>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @ApiModelProperty(value = "")
  public List<Service> getServices() {
    return services;
  }

  public void setServices(List<Service> services) {
    this.services = services;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoomStay roomStay = (RoomStay) o;
    return Objects.equals(this.roomNumber, roomStay.roomNumber) &&
        Objects.equals(this.status, roomStay.status) &&
        Objects.equals(this.guestId, roomStay.guestId) &&
        Objects.equals(this.roomType, roomStay.roomType) &&
        Objects.equals(this.rateCode, roomStay.rateCode) &&
        Objects.equals(this.marketCode, roomStay.marketCode) &&
        Objects.equals(this.channelCode, roomStay.channelCode) &&
        Objects.equals(this.sourceCode, roomStay.sourceCode) &&
        Objects.equals(this.blockCode, roomStay.blockCode) &&
        Objects.equals(this.roomCount, roomStay.roomCount) &&
        Objects.equals(this.paymentMethod, roomStay.paymentMethod) &&
        Objects.equals(this.compYN, roomStay.compYN) &&
        Objects.equals(this.rates, roomStay.rates) &&
        Objects.equals(this.revenue, roomStay.revenue) &&
        Objects.equals(this.services, roomStay.services);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roomNumber, status, guestId, roomType, rateCode, marketCode, channelCode, sourceCode, blockCode, roomCount, paymentMethod, compYN, rates, revenue, services);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoomStay {\n");
    
    sb.append("    roomNumber: ").append(toIndentedString(roomNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    guestId: ").append(toIndentedString(guestId)).append("\n");
    sb.append("    roomType: ").append(toIndentedString(roomType)).append("\n");
    sb.append("    rateCode: ").append(toIndentedString(rateCode)).append("\n");
    sb.append("    marketCode: ").append(toIndentedString(marketCode)).append("\n");
    sb.append("    channelCode: ").append(toIndentedString(channelCode)).append("\n");
    sb.append("    sourceCode: ").append(toIndentedString(sourceCode)).append("\n");
    sb.append("    blockCode: ").append(toIndentedString(blockCode)).append("\n");
    sb.append("    roomCount: ").append(toIndentedString(roomCount)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    compYN: ").append(toIndentedString(compYN)).append("\n");
    sb.append("    rates: ").append(toIndentedString(rates)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

