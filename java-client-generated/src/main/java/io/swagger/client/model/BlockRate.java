/*
 * HAPI Repository API
 * API for retrieving objects from HAPI repository
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * BlockRate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-26T23:47:35.032Z")
public class BlockRate {
  @SerializedName("guests")
  private Integer guests = null;

  @SerializedName("occupancyProjected")
  private Integer occupancyProjected = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("includesTax")
  private Boolean includesTax = null;

  public BlockRate guests(Integer guests) {
    this.guests = guests;
    return this;
  }

   /**
   * number of guests
   * @return guests
  **/
  @ApiModelProperty(value = "number of guests")
  public Integer getGuests() {
    return guests;
  }

  public void setGuests(Integer guests) {
    this.guests = guests;
  }

  public BlockRate occupancyProjected(Integer occupancyProjected) {
    this.occupancyProjected = occupancyProjected;
    return this;
  }

   /**
   * projected occupancy for number of guests indicated
   * @return occupancyProjected
  **/
  @ApiModelProperty(example = "0", value = "projected occupancy for number of guests indicated")
  public Integer getOccupancyProjected() {
    return occupancyProjected;
  }

  public void setOccupancyProjected(Integer occupancyProjected) {
    this.occupancyProjected = occupancyProjected;
  }

  public BlockRate amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * rate amount
   * @return amount
  **/
  @ApiModelProperty(example = "105.5", value = "rate amount")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public BlockRate includesTax(Boolean includesTax) {
    this.includesTax = includesTax;
    return this;
  }

   /**
   * is indicated rate inclusive of tax
   * @return includesTax
  **/
  @ApiModelProperty(example = "true", value = "is indicated rate inclusive of tax")
  public Boolean isIncludesTax() {
    return includesTax;
  }

  public void setIncludesTax(Boolean includesTax) {
    this.includesTax = includesTax;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockRate blockRate = (BlockRate) o;
    return Objects.equals(this.guests, blockRate.guests) &&
        Objects.equals(this.occupancyProjected, blockRate.occupancyProjected) &&
        Objects.equals(this.amount, blockRate.amount) &&
        Objects.equals(this.includesTax, blockRate.includesTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guests, occupancyProjected, amount, includesTax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockRate {\n");
    
    sb.append("    guests: ").append(toIndentedString(guests)).append("\n");
    sb.append("    occupancyProjected: ").append(toIndentedString(occupancyProjected)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    includesTax: ").append(toIndentedString(includesTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

